[agent]
  hostname = "avalanche-node"

# Avalanchego container
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_name_include = ["*"]
  timeout = "5s"
  perdevice = false
  total = false
  fieldpass = ["n_containers_running"]

## avalanchego metrics
# Node's health status
[[inputs.http]]
  urls = ["http://localhost:9650/ext/health"]
  method = "GET"
  headers = {"Content-Type" = "application/json"}
  data_format = "json"
  json_string_fields = ["healthy"]
  [inputs.http.tags]
    api_endpoint = "/ext/health"

# Highest block number
[[inputs.http]]
  urls = ["http://localhost:9650/ext/bc/C/rpc"]
  method = "POST"
  body = '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":2}'
  headers = {"Content-Type" = "application/json"}
  data_format = "json"
  json_string_fields = ["result"]
  [inputs.http.tags]
    api_method = "eth_blocknumber"

# Staked AVAX amount
[[inputs.http]]
  urls = ["http://localhost:9650/ext/P"]
  method = "POST"
  body = '{"jsonrpc":"2.0","method":"platform.getStake","params":{"addresses":["BENEFICIAR_ADDRESS"]},"id":1}'
  headers = {"Content-Type" = "application/json"}
  data_format = "json"
  json_query = "result"
  json_string_fields = ["staked"]

[[processors.converter]]
  [processors.converter.fields]
    unsigned = ["staked"]

[[processors.converter]]
  [processors.converter.fields]
    float = ["result"]
    integer = ["healthy"]
